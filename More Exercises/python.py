# -*- coding: utf-8 -*-
"""Python_Exercises.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HldfPpTBGSdfe9_NmMXJA4wuvAwqjFxE

# INTRODUCCION
"""

#Ejercicio 1
#Escribir un programa que muestre por la pantalla la cadena ¡Hola Mundo!

print("¡Hola Mundo!")

#Ejercicio 2
#Escribir un programa que almacene la cadena ¡Hola Mundo! en una variable y luego muestre por pantalla el contenido de la variable.
saludo = ("Hola Mundo")
print(saludo)

#Ejercicio 3
# Escribir un programa que pregunte el nombre del usuario en la consola y después de que el usuario lo introduzca muestre por pantalla la cadena
# ¡Hola <nombre>!, donde <nombre> es el nombre que el usuario haya introducido.

UserName = input("¿Cual es tu nombre? : ")
print("Hola " , UserName +"!")

#Ejercicio 4
#Escribir un programa que muestre por pantalla el resultado de la siguiente operación aritmética (3+2 / 2,5) 2.

#print(((3+2)/2.5)**2)


resultado = ((3 + 2) / 2.5) ** 2
print(f'(3+2/2,5)^2 = {resultado}')

#Ejercicio 5
#Escribir un programa que pregunte al usuario por el número de horas trabajadas y el costo por hora. Después debe
#mostrar por pantalla el sueldo que le corresponde.

HorasTrabajadas = int(input("Cuantas horas trabajaste? :"))
CostoHora = float(input("Cuanto es el costo x hora? : "))
Sueldo = (HorasTrabajadas*CostoHora)
print(f"Mi salario es: ${Sueldo} ")

#EJERCICIO 6
# Escribir un programa que lea un entero positivo, N, introducido por el usuario y después muestre en la pantalla la suma
# de todos los enteros desde 1 hasta N. La suma de los N primeros enteros positivos puede ser calculada de la siguiente
# forma. suma = n(n + 1 ) / 2

"""
numero= int(input("Introduce un numero entero positivo"))

if numero>= 1:
  for i in range (1 , numero+1):
    print(i)
"""
""" i=1
numero=int(input("ingrese un numeroo: "))
while i<= numero:
  print(i)
  i+=1"""

entero_positivo = int(input("Introduce un número entero positivo: "))
suma = (entero_positivo * (entero_positivo + 1)) // 2
print(f'El Resultado es: {suma}')

#Ejercicio 7
#Escribir un programa que pida al usuario su peso (kg) y estatura ( en metros), calcule el índice de masa corporal y lo
#almacene en una variable, y muestre por pantalla la frase Tu índice de masa corporal es <imc> donde <imc> es el
#índice de masa corporal calculado redondeado con dos decimales.

peso_corporal=float(input("Ingrese su peso en Kg: "))
estatura = float(input("Ingrese su altura en metros: "))
IMC = peso_corporal/ (estatura**2)
print(f"Su indice de masa corporal es: {IMC} " )

#Ejercicio 8
#Escribir un programa que pida al usuario dos números enteros por pantalla la <n> entre <m> da un cociente <c> y un
#resto <r>, donde <n> y <m> son los números introducidos por el usuario, y <c> y <r> son el cociente y el resto de la
#división entera respectivamente.

num1=int(input("ingrese el primer numero entero: "))
num2=int(input("ingrese el segundo numero entero: "))


cociente=(num1//num2)

resto= num1%num2

print(f"el cociente de la division es : {cociente} y su resto es : {resto} ")

#Ejercicio 9
#Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años y muestre
#por pantalla el capital obtenido en la inversión. capital + (cantidad * (intereses / 100 + 1) años)
"""
capital=float(input("Que cantidad desea invertir: "))
interes = float(input("Cuantos intereses se desea generar: "))
años= float(input("A cuantos años desea invertir : "))

monto = capital*(1+interes/100)**años

print(monto)
"""
cantidad = capital = float(input("Que cantidad desesa invertir?: "))

interes=float(input("ingrese el interes anual: "))
años = int(input("Cantidad de años a invertir: "))

inversion= capital + (cantidad * (interes/100+1)**años)
print(f"el capital final es de : {inversion}")

#Ejercicio 10:
"""Una juguetería tiene mucho éxito en dos de sus productos: payasos y muñecas. Suele hacer venta por web y la empresa
de logística les cobra por peso de cada paquete así que deben calcular el de los payasos y muñecas que saldrán en cada
paquete a demanda. Cada payaso pesa 112 gr y cada muñeca 75 gr. Escribir un programa que lea el número de
payasos y muñecas vendidos en el último pedido y calcule el peso total del paquete que será enviado."""

peso_payaso = 112
peso_muñeca = 75

cantidad_payasos= int(input("ingrese la cantidad de payasos vendidos: "))
cantidad_muñecas=int(input("Ingrese la cantidad de muñecas vendidas: "))

peso_total= cantidad_payasos*peso_payaso + cantidad_muñecas*peso_muñeca

print(f"El peso total del paquete es : {peso_total/1000} kg ")

# Ejercicio 11
#Imagina que acabas de abrir una nueva cuenta de ahorros que te ofrece el 4% de interés al año. Estos ahorros debido a
#intereses, que no se cobran hasta finales de año, se te suman al saldo final de tu cuenta de ahorros. Escribir un
#programa que comience leyendo la cantidad de dinero en la cuenta de ahorros introducida por el usuario. Después el
#programa debe calcular y mostrar por pantalla la cantidad de ahorros tras el primer, segundo y tercer años. Redondear
#cada cantidad a dos decimales.

año=1
dinero=float(input("Ingrese la cantidad de dinero en cuenta: "))
while año<=3:
  interes = dinero* 4 /100

  dinero +=interes
  print(dinero)
  año+=1

"""### Ejercicio 12
Una panadería vende barras de pan a $3.499 cada una. El pan que no es del día tiene un descuento de un 60%. Escribir
un programa que comience leyendo el numeros de barras de pan vendidas que no son del día. Después el programa
debe mostrar el precio habitual de una barra de pan, el descuento que se le hace por no ser del día y el costo final total.
"""
pan = 3499
pan_descuento = 60/100
cantidad_pan_descuento = int(input("ingrese la cantidad de panes vendidos que no son del dia :  "))
costo_final = cantidad_pan_descuento  * pan
costo_final_descuento= cantidad_pan_descuento * pan * (1-pan_descuento)
print(f"precio del pan:  {pan}")
print(f"Descuento por no ser del dia : {pan_descuento*100}%")
print(f"Cantidad por unidad con el descuento aplicado : {costo_final_descuento}")
print(f"costo final sin el descuento : {costo_final}")

"""# LISTAS , TUPLAS , DICCIONARIOS Y SET"""

# EJERCICIO 1
Materias = ["Matemáticas","Física","Química","Historia","Lengua"]
print(f"{Materias}")

#EJERCICIO 2
"""Escribir un programa que almacene las asignaturas de un curso (por ejemplo: Matemáticas, Física, Química, Historia y Lengua)
en una lista y la muestre por pantalla el mensaje Yo estudio <asignatura>, donde <asignatura> es cada una de las asignaturas
de la lista."""

Materia = ["Matemáticas","Física","Química","Historia","Lengua"]
for Materia in Materias:
    print(f"Yo estudio {Materia}")

#Ejercicio 3
""""Escribir un programa que almacene las asignaturas de un curso (por ejemplo: Matemáticas, Física, Química, Historia y Lengua)
en una lista, pregunte al usuario la nota que ha sacado en cada asignatura, y después las muestre por pantalla con el
mensaje En <asignatura> has sacado <nota> donde <asignatura> es cada una de las asignaturas de la lista y <nota> cada una
de las correspondientes notas introducidas por el usuario."""

nota = []

Materias = ["Matemáticas","Física","Química","Historia","Lengua"]
for Materia in Materias:
    notas_numericas= input(f"Que nota ha sacado en {Materia} ")
    nota.append(notas_numericas)
for i in range (len(Materias)):
  print(f"En la asignatura {Materias[i]} a sacado : {nota[i]}")

#EJERCICIO 4
#Escribir un programa que pregunte al usuario los números ganadores de la lotería, los almacene en una lista y los muestre por
#pantalla ordenados de menor a mayor.
lista= []
opcion=0
print("1-Ingresar numero \n0-Salir")
opcion=int(input("ingrese una opcion: "))
while opcion!=0 :
  if opcion == 1:
    numeros_ganadores=int(input("ingrese los numeros ganadores de loteria: "))
    lista.append(numeros_ganadores)
    #print(lista)
    lista.sort()
    print(lista)
    print("\n")
    print("1-Ingresar numero \n2-Salir")
    opcion=int(input("ingrese una opcion: "))
  elif opcion !=1 :
    print (f"la lista ordenada de menor a mayor quedaria asi : {lista}")
    break

#EJERCICIO 5 DE LISTAS Y TUPLAS
#Escribir un programa que almacene en una lista los números del 1 al 10 y los muestre por pantalla en orden inverso separados
#por comas.
lista= [1,2,3,4,5,6,7,8,9,10]

lista.reverse()
print(lista)

#EXERCISE 6 LISTAS Y TUPLAS
#Escribir un programa que almacene las asignaturas de un curso (por ejemplo: Matemáticas, Física, Química, Historia y Lengua)
#en una lista, pregunte al usuario la nota que ha sacado en cada asignatura y elimine de la lista las asignaturas aprobadas. Al
#final el programa debe mostrar por pantalla las asignaturas que el usuario tiene que repetir.

Asignaturas = ["Matematicas" , "Fisica" , "Quimica" , "Historia" , "Lengua"]
notas=[]

for Asignatura in Asignaturas:
  nota = int(input(f"Que nota saco en {Asignatura} : "))
  notas.append(nota)
print(notas)

materias_pendiente=[]

for i in range (len(Asignaturas)):
  materia = Asignaturas[i]
  valor = notas[i]
  print(f"Asignatura: {materia}, Nota: {valor}")
  if valor<7:

    materias_pendiente.append(materia)

print(f"Lista de Materias pendientes : {materias_pendiente}")

#EJERCICIO 1 DICCIONARIOS
#Escribir un programa que guarde en una variable el diccionario {'Euro':'€', 'Dollar':'$', 'Yen':'¥'}, pregunte al usuario
#por una divisa y muestre su símbolo o un mensaje de aviso si la divisa no está en el diccionario.
divisas = {'Euro':'€','Dolar':'$', 'Yen':'¥'}
consulta=input("Que divisa desea mostrar: ")
if consulta in divisas :
  print(divisas[consulta])


#for x in divisas:
 # print(x)"""

#EJERCICIO 2
#Escribir un programa que pregunte al usuario su nombre, edad, dirección y teléfono y lo guarde en un diccionario. Después
#debe mostrar por pantalla el mensaje <nombre> tiene <edad> años, vive en <dirección> y su número de teléfono es <teléfono>.

datos= {}

datos["nombre"]=input("ingrese su nombre : ")
datos["edad"] = input("ingrese su edad: ")
datos["direccion"] = input("ingrese su direccion: ")
datos["telefono"]= (input("ingrese su telefono: "))
print(datos)
print(f"{(datos['nombre'])} tiene {(datos['edad'])} años , vive en {(datos['direccion'])} y su numero de telefono es: {(datos['telefono'])} ")

#EJERCICIO 3
#Escribir un programa que guarde en un diccionario los precios de las frutas de la tabla, pregunte al usuario por una fruta, un
#número de kilos y muestre por pantalla el precio de ese número de kilos de fruta. Si la fruta no está en el diccionario debe
#mostrar un mensaje informando de ello. Banana 500, Manzana 300, Pera 400 y Naranja 600.

# Diccionario con las frutas y sus precios por kilo
precios = {
    "Banana": 500,
    "Manzana": 300,
    "Pera": 400,
    "Naranja": 600
}

# Pedir datos al usuario
fruta = input("Ingrese una fruta: ").capitalize()
kilos = float(input("Ingrese la cantidad de kilos: "))

# Verificar si la fruta existe en el diccionario
if fruta in precios:
    total = precios[fruta] * kilos
    print(f"El precio de {kilos} kilos de {fruta} es: ${total}")
else:
    print("Lo siento, esa fruta no está en la lista.")

#Ejercicio 4
#Escribir un programa que pregunte una fecha en formato dd/mm/aaaa y muestre por pantalla la misma fecha en formato dd
#de <mes> de aaaa donde <mes> es el nombre del mes.

fecha= input("Ingrese la fecha en formato dd/mm/aaaa: ")

dia, mes, año = fecha.split("/")
print(fecha)

meses = {
    "01": "enero",
    "02": "febrero",
    "03": "marzo",
    "04": "abril",
    "05": "mayo",
    "06": "junio",
    "07": "julio",
    "08": "agosto",
    "09": "septiembre",
    "10": "octubre",
    "11": "noviembre",
    "12": "diciembre"
}
mes_nombre = meses[mes]
print(f"{dia} de {mes_nombre} de {año}")

#Ejercicio 5
#Escribir un programa que almacene el diccionario con los créditos de las asignaturas de un curso {'Matemáticas': 6, 'Física': 4,
#'Química': 5} y después muestre por pantalla los créditos de cada asignatura en el formato <asignatura> tiene <créditos>
#créditos, donde <asignatura> es cada una de las asignaturas del curso, y <créditos> son sus créditos. Al final debe mostrar
#también el número total de créditos del curso.
creditos = {'Matemáticas': 6, 'Física': 4,'Química': 5}

for clave , valor in creditos.items() :
  print(f"{clave} tiene {valor} creditos")

sum(creditos.values())

"""BUCLES WHILE Y FOR"""

#EJERCICIO 1

#Escribir un programa que pida al usuario una palabra y la muestre por pantalla 10 veces.

palabra = input("ingrese una palabra")

for letra in palabra:
  print((letra +" \n")*10)

#Ejercicio 2 BUCLES
#Escribir un programa que pregunte al usuario su edad y muestre por pantalla todos los años que ha cumplido (desde 1 hasta su edad).

edad = int(input("cual es tu edad :"))
for numero in range (edad+1) :
  print(numero)

#Ejercicio 3 BUCLES
#Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla todos los números impares desde 1 hasta ese número separados por comas.

numero=int(input("ingrese un numero entero positivo"))

if  numero >=0:
  for todos in range (1,numero+1,2) :
    print(todos , end=(","))

#• Ejercicio 4 BUCLES
#Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla la cuenta atrás desde ese número
#hasta cero separados por comas.


numero = int(input("ingrese un numero entero positivo: "))

if numero > 0:
  for cuenta in range (numero ,0 , -1):
    print(cuenta,end=(","))

#Ejercicio 5 BUCLES
#Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por
#pantalla el capital obtenido en la inversión cada año que dura la inversión.


capital = int(input("cantidad a invertir : "))
interes = int(input("interes anual = "))
años = int(input("numeros de años : "))

inversion= capital + (capital * (interes/100+1)**años)


print(f"el capital final es de : {inversion}")

#Ejercicio 5 BUCLES
capital = int(input("cantidad a invertir : "))
interes = int(input("interes anual = "))
años = int(input("numeros de años : "))

for i in range(1, años+1):
    capital = capital * (1 + interes/100)
    print(f"Año {i}: {capital:.2f}")

#EJERCICIO 6 BUCLES
altura = int(input("Ingrese la altura del triángulo: "))
for i in range(1, altura + 1):
  print("*" * i)

#Ejercicio 7
#Escribir un programa que muestre por pantalla la tabla de multiplicar del 1 al 10
for tabla in range (1,11):
  for multiplicador in range (1,11):
    print(f"{tabla} x {multiplicador} = {tabla * multiplicador}")

# Ejercicio 8
#Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo.
#1
#3 1
#5 3 1
#7 5 3 1
#9 7 5 3 1

numero = int(input("ingrese un numero: "))
contador = 1
for i in range (1 , numero+1 ,2):
  #lista=[]
  for j in range (i, 0 , -2):
    print(j,end="")
  print()

#Ejercicio 9
#Escribir un programa que almacene la cadena de caracteres contraseña en una variable, pregunte al usuario por la contraseña hasta que introduzca la contraseña correcta.

clave = "QWERTYUIOP"

intento = input("Introduce la contraseña: ")

while intento != clave:
    intento = input("Incorrecto. Intenta de nuevo: ")

print("¡Contraseña correcta!")

"""Jueves 14/08 Funciones

#FUNCIONES

EJERCICIOS 14/8
FUNCIONES
"""

#EJERCICIO 1:ESCRIBIR CON UNA FUNCION QUE MUESTRE POR PANTALLA "HOLA AMIGA" CADA VEZ QUE SE LA INVOQUE

def saludo():
  print("¡Hola amiga!")

saludo()

#EJERCICIO 2: Escribir una funcion a la que se le pase una cadena <nombre> y muestre por panntala el saludo Hola <nombre>!.

def saludo(nombre):
  print("Hola", nombre, "!")

saludo("Yas")

# EJERCICIO 3: Escribir una funcion que reciba un numero entero positivo y devuelva su factorial.
def factorial(numero):
  resultado=1
  for i in range( 1,numero+1 ):
    resultado*=i
  return resultado

print(factorial(3))

# EJERCICIO 4: Escribir una funcion que calcule el total de una factura tras aplicarle el IVA. La funcion debe recibir la cantidad sin IVA y el porcentaje
# de IVA a aplicar, y devolver el total de la factura. Si se invoca la funcion sin pasarle el porcentaje de IVA, debera aplicar un 21%.


def monto_final(cantidad , iva=21):
  cantidad_final = cantidad + cantidad *(iva/100)
  print(cantidad_final)

cantidad = int(input("escriba el monto sin IVA : "))
iva = int (input ("porcentaje de iva a aplicar: "))
(monto_final(cantidad,iva))

def monto_final(cantidad , iva=21):
  cantidad_final = cantidad + cantidad *(iva/100)
  return cantidad_final

cantidad = int(input("escriba el monto sin IVA : "))
iva = int (input ("porcentaje de iva a aplicar: "))
if iva == ""  :
  resultado = monto_final(cantidad)
else:
  resultado = monto_final(cantidad , iva)

print(monto_final(cantidad , iva))

#EJERCICIO 5
#Escribir una función que calcule el área de un círculo y otra que calcule el volumen de un cilindro usando la primera función.
import math
def area_circulo(radio):
  area= math.pi * (radio*radio)
  return area

def volumen_cilindro (radio , altura):
  area = area_circulo(radio)
  volumen = area * altura
  return volumen


radio=int(input("ingrese el radio : "))

altura = int(input("ingrese la altura en metros : "))

print(f"la area del circulo es : {area_circulo(radio)} y el volumen es {volumen_cilindro(radio,altura)} ")

lista= []
opcion=0
print("1-Ingresar numero \n0-Salir")
opcion=int(input("ingrese una opcion: "))
while opcion!=0 :
  if opcion == 1:
    numeros_ganadores=int(input("ingrese los numeros ganadores de loteria: "))
    lista.append(numeros_ganadores)
    #print(lista)
    lista.sort()
    print(lista)
    print("\n")
    print("1-Ingresar numero \n2-Salir")
    opcion=int(input("ingrese una opcion: "))
  elif opcion !=1 :
    print (f"la lista ordenada de menor a mayor quedaria asi : {lista}")
    break

#EJERCICIO 6
#Escribir una función que reciba una muestra de números en una lista y devuelva su promedio.

lista=[]

def promedio (lista):
  promiedo=sum(lista)/len(lista)
  return promiedo

opcion=0
print("1-Ingrese un numero \n 2-Salir")
opcion=int(input(" Ingrese una opcion "))
while opcion!=0:
  if opcion == 1:
    numero=int(input("ingrese un numero: "))
    lista.append(numero)
    print(lista)
    print("1-Ingrese un numero \n 0-Salir")
    opcion=int(input("ingrese una opcion: "))

promedio(lista)

"""MANEJO DE DATOS

# MANEJO DE DATOS PANDAS
"""

#Ejercicio 1
#Cargar un archivo CSV y mostrar sus primeras 10 filas.


from google.colab import drive
import pandas as pd

drive.mount('/content/drive')


# Cambiá la ruta por donde esté tu CSV
df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/carpeta/datos.csv')

#Desarrollo
df.head(10)

#FORMA LOCAL
from google.colab import files
import pandas as pd

# Subir CSV desde tu computadora
uploaded = files.upload()  # Esto abre un explorador para elegir el archivo
# Tomar el primer archivo subido
archivo = list(uploaded.keys())[0]

# Leer CSV
df = pd.read_csv(archivo)

# Mostrar primeras 10 filas
df.head(10)

#Ejercicio 2
#Leer un JSON y acceder al valor de una clave específica.
#ACCEDER CON ARCHIVOS DE GOOGLE DRIVE IMPORTADOS DE PC LOCAL
from google.colab import files
import json


with open('/content/drive/MyDrive/Colab Notebooks/carpeta/jugadores.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

print(data["jugadores"][1]["edad"])

#EJERCICIO 2 ACCEDER A LOS ARCHIVO LOCALES CON PYTHON
from google.colab import files
import json
# Subir archivo
uploaded = files.upload()  # Esto abre el selector de archivos

# Obtener el nombre del archivo subido
archivo = list(uploaded.keys())[0]

# Leerlo directamente desde el diccionario
data = json.loads(uploaded[archivo].decode("utf-8"))

# Acceder a un valor específico
print(data["jugadores"][0]["nombre"])  # Debe imprimir 37

#Ejercicio 3
#Leer un Excel y listar las columnas que contiene.

from google.colab import files
import pandas as pd


drive.mount('/content/drive')


# Cambiá la ruta por donde esté tu CSV
ruta ='/content/drive/MyDrive/Colab Notebooks/carpeta/listaclientes.xlsx'

df = pd.read_excel(ruta)


print("Columnas en el Excel:")
print(df.columns.tolist())

#Ejercicio 4
import pandas as pd
df=pd.read_csv("datos.csv")

filtro=df[df["edad"]>30]
print(filtro)